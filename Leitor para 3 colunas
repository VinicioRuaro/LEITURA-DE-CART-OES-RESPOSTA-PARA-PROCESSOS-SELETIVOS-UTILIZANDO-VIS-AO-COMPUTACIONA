from re import A
from unittest import result
import cv2
import time
import numpy as np
from pyzbar.pyzbar import decode 
from os import walk


# Função para leitura dos pixeis
def verficamatrix(li,linhafin,co,colunafin):
    colunaini=co
    negativo=0
    positivo=0
    while li < linhafin:
        while co < colunafin:
            if img[li,co][0]>200:   
                negativo=negativo+1    
                #image.itemset((li, co, 0), 0) #Set B to 255     # define a cor vermelho para onde não encontrou
                #image.itemset((li, co, 1), 0) #Set G to 255
                #image.itemset((li, co, 2), 255) #Set R to 255
            if img[li,co][0]<=200:  
                positivo=positivo+1    
                #image.itemset((li, co, 0), 0)                   # define a cor verde para onde encontrou
                #image.itemset((li, co, 1), 255) 
                #image.itemset((li, co, 2), 0)
            co= co+1
        co=colunaini  # Reseta a coluna
        li=li+1

    if positivo>(positivo+negativo)*0.35:
        return True
    else:
        return False

def BarcodeReader(): 
    
    detectedBarcodes = decode(fatia) 
       
    if not detectedBarcodes: 
        print("Barcode Not Detected or your barcode is blank/corrupted!") 
    else: 
      for barcode in detectedBarcodes:   
                (x, y, w, h) = barcode.rect 
                cv2.rectangle(img, (x-10, y-10), 
                          (x + w+10, y + h+10),  
                          (255, 0, 0), 2) 
                
                if barcode.data!="": 
                    x=str(barcode.data)
                    resultado = ''.join(filter(lambda i: i if i.isdigit() else None, x))
                    return resultado

import os
pasta = './teste'
for diretorio, subpastas, arquivos in os.walk(pasta):
    for arquivo in arquivos:
        inicio= time.time()
        img = cv2.imread('teste/'+arquivo) 
        
        image = cv2.medianBlur(img, 35)   #mediana
        li = [0,0.411,0.435,0.458,0.481,0.505,0.527,0.55,0.574,0.598,0.6195,0.643,0.668,0.690,0.715,0.736,0.76,0.783,0.807,0.83,0.852]
        lf = [0,0.425,0.447,0.471,0.494,0.518,0.541,0.565,0.586,0.611,0.634,0.658,0.68,0.704,0.727,0.75,0.773,0.797,0.82,0.843,0.867]
        ci = [0,0.167,0.2,0.233,0.265,0.297,0.425,0.46,0.493,0.525,0.56,0.695,0.73,0.76,0.792,0.824]
        cf = [0,0.19,0.22,0.253,0.286,0.317,0.447,0.48,0.515,0.545,0.58,0.72,0.75,0.78,0.812,0.847]
        x,y= 1,1
        final=respota = ''
        resultadoq=0

        while x < 21:     #loop para ler as questões 01-20
            while y < 6:
                resultadoq = verficamatrix(int(image.shape[0]*li[x]), int(image.shape[0]*lf[x]),    int(image.shape[1]*ci[y]),    int(image.shape[1]*cf[y]))
                
                if resultadoq:
                    if y==1:
                        respota = 'a'
                    if y==2:
                        respota = respota+'b'
                    if y==3:
                        respota = respota+'c'
                    if y==4:
                        respota = respota+'d'
                    if y==5:
                        respota = respota+'e'
                y=y+1
            y=1
            x=x+1
            final = final+respota+';'
            respota = ''

        x,y= 1,6
        while x < 21:    #loop para ler as questões 21-40
            while y < 11:
                resultadoq = verficamatrix(int(image.shape[0]*li[x]), int(image.shape[0]*lf[x]),    int(image.shape[1]*ci[y]),    int(image.shape[1]*cf[y]))
                
                if resultadoq:
                    if y==6:
                        respota = respota+'a'
                    if y==7:
                        respota = respota+'b'
                    if y==8:
                        respota = respota+'c'
                    if y==9:
                        respota = respota+'d'
                    if y==10: 
                        respota = respota+'e'
                y=y+1  
            y=6
            
            x=x+1
            final = final+respota+';'
            respota = ''

        x,y= 1,11
        while x < 21:    #loop para ler as questões 41-60
            while y < 16:
                resultadoq = verficamatrix(int(image.shape[0]*(li[x]-0.003)), int(image.shape[0]*(lf[x]-0.003)),    int(image.shape[1]*ci[y]),    int(image.shape[1]*cf[y]))
                
                if resultadoq:
                    if y==11:
                        respota = 'a'
                    if y==12:
                        respota = 'b'
                    if y==13:
                        respota = 'c'
                    if y==14:
                        respota = 'd'
                    if y==15: 
                        respota = 'e'
                y=y+1  
            y=11

            x=x+1
            final = final+respota+';'
            respota = ''

        fatia = img[int(image.shape[0]*0.05):int(image.shape[0]*0.12), int(image.shape[1]*0.1):int(image.shape[1]*0.3)]

        #cv2.imwrite("resultado.bmp", image)    #Caso deseja imprimir a pagina com as respostas marcadas, necessita tirar os cometarios da função printnp tambem

        image="Img.jpg"
        resultado=BarcodeReader() 
        tfinal=time.time()
        tempo = tfinal-inicio
        print(resultado,';',final,';',tempo)
